version: "3.9"

services:
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: orderdb
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  redpanda:
    image: redpandadata/redpanda:v23.3.3
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp=1
      - --memory=512M
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092
    ports:
      - "9092:9092"
    healthcheck:
      test: curl --fail http://localhost:9644/v1/status/ready || exit 1
      interval: 10s
      timeout: 5s
      retries: 10

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4318:4318"  # OTLP HTTP
      - "4317:4317"  # OTLP gRPC

  order-service:
    build:
      context: .
      dockerfile: order/Dockerfile
    ports:
      - "8000:8000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: redpanda:9092
      POSTGRES_DSN: postgresql+asyncpg://postgres:postgres@postgres:5432/orderdb
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
      SERVICE_NAME: order-service
    depends_on:
      postgres:
        condition: service_healthy
      redpanda:
        condition: service_healthy
      otel-collector:
        condition: service_started
    env_file:
      - .env

volumes:
  pg_data:
